#+TITLE: Protogg

Protogg remapps the =project.el= functions to their non-project related functions while also providing a minbuffer keybinding to toggle between the two functions.

* Getting Started

  Here is an example configuration using =use-package=

#+begin_src emacs-lisp
(use-package protogg
  :ensure nil
  :vc (protogg :url "https://github.com/nehrbash/protogg"
        :branch "main")
  :custom (protogg-minibuffer-toggle-key "M-g")
  :config (protogg-mode 1))
#+end_src

* Usage

  When =protogg= is enabled and in a detectable project according to =project.el= the =project-*= command will be called instead of the typical command. Example calling =find-file= will actually call =project-find-file=. However, you may not always want the project version. To solve this, while in the minibuffer you may switch between the two command with the =protogg-switch-minibuffer= function bound to =M-q= by default.

** Remapping

   Here is a list of  the remapped project function.

| original-function   | remapped to                 |
|---------------------+-----------------------------|
| async-shell-command | project-async-shell-command |
| compile             | project-compile             |
| dired               | project-dired               |
| display-buffer      | project-display-buffer      |
| eshell              | project-eshell              |
| find-dired          | project-find-dir            |
| find-file           | project-find-file           |
| kill-buffer         | project-kill-buffer         |
| list-buffers        | project-list-buffers        |
| shell               | project-shell               |
| shell-command       | project-shell-command       |
| switch-to-buffer    | project-switch-to-buffer    |

** Example Mapping to  a Diffrent Function or Adding Your Own

#+begin_src emacs-lisp
(use-package protogg
  :config
  (protogg-mode 1)
  (protogg-create 'consult-project-buffer 'consult-buffer sn/consult-buffer)
  (define-key protogg-mode-map [remap switch-to-buffer] 'sn/consult-buffer))
#+end_src
